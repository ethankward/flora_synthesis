# Generated by Django 4.2.3 on 2023-08-10 01:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_name', models.TextField()),
                ('checklist_type', models.CharField(choices=[('i', 'iNaturalist'), ('s', 'SEINet'), ('o', 'Other')], max_length=1)),
                ('checklist_state', models.CharField(blank=True, max_length=32, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('external_checklist_id', models.IntegerField(blank=True, null=True)),
                ('local_checklist_fn', models.CharField(blank=True, max_length=256, null=True)),
                ('latest_date_retrieved', models.DateField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('checklist_name',)},
            },
        ),
        migrations.CreateModel(
            name='ChecklistFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family', models.CharField(max_length=256)),
                ('external_id', models.CharField(blank=True, max_length=32, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.checklist')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_record_id', models.CharField(max_length=256)),
                ('full_metadata', models.TextField(blank=True, null=True)),
                ('verbatim_coordinates', models.CharField(blank=True, max_length=32, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=12, max_digits=32, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=12, max_digits=32, null=True)),
                ('verbatim_date', models.CharField(blank=True, max_length=32, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('verbatim_elevation', models.CharField(blank=True, max_length=32, null=True)),
                ('elevation_ft', models.IntegerField(blank=True, null=True)),
                ('last_refreshed', models.DateTimeField(blank=True, null=True)),
                ('observer', models.TextField(blank=True, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('herbarium_institution', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_type', models.CharField(choices=[('IR', 'Research grade (iNaturalist)'), ('IN', 'Needs ID (iNaturalist)'), ('IC', 'Casual (iNaturalist)'), ('SG', 'General research (SEINet)'), ('SC', 'Collection (SEINet)'), ('FP', 'Present in flora'), ('FM', 'Missing from flora'), ('UK', 'Unknown')], max_length=2)),
                ('observation_type_value', models.CharField(max_length=256)),
            ],
            options={
                'unique_together': {('observation_type',)},
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxon_name', models.CharField(max_length=256)),
                ('rank', models.CharField(choices=[('S', 'Species'), ('U', 'Subspecies'), ('V', 'Variety'), ('H', 'Hybrid')], max_length=1)),
                ('genus', models.CharField(max_length=256)),
                ('family', models.CharField(max_length=256)),
                ('life_cycle', models.CharField(blank=True, choices=[('a', 'annual'), ('p', 'perennial'), ('u', 'unknown')], max_length=1, null=True)),
                ('introduced', models.CharField(blank=True, choices=[('i', 'introduced'), ('n', 'native'), ('p', 'possibly introduced')], max_length=1, null=True)),
                ('endemic', models.CharField(blank=True, choices=[('n', 'Not endemic'), ('u', 'In the US only in {checklist_name} but also occurs outside of the US'), ('z', 'In {state} only found in {checklist_name} but also occurs outside of {checklist_state}'), ('a', '{checklist_state}'), ('r', '{checklist_name}')], max_length=1, null=True)),
                ('inat_id', models.IntegerField(blank=True, null=True)),
                ('seinet_id', models.IntegerField(blank=True, null=True)),
                ('observation_types', models.ManyToManyField(blank=True, to='flora.observationtype')),
                ('on_checklists', models.ManyToManyField(blank=True, to='flora.checklist')),
                ('parent_species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taxon_parent_species', to='flora.taxon')),
                ('subtaxa', models.ManyToManyField(blank=True, related_name='taxon_subtaxa', to='flora.taxon')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistTaxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxon_name', models.CharField(max_length=256)),
                ('external_id', models.IntegerField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=256, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.checklist')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.checklistfamily')),
                ('mapped_taxa', models.ManyToManyField(blank=True, to='flora.taxon')),
            ],
            options={
                'unique_together': {('checklist', 'taxon_name')},
            },
        ),
        migrations.CreateModel(
            name='ChecklistRecordImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('image_size', models.CharField(blank=True, choices=[('s', 'small'), ('m', 'medium'), ('l', 'large')], max_length=1, null=True)),
                ('checklist_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_record_images', to='flora.checklistrecord')),
            ],
        ),
        migrations.AddField(
            model_name='checklistrecord',
            name='canonical_mapped_taxon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flora.taxon'),
        ),
        migrations.AddField(
            model_name='checklistrecord',
            name='checklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.checklist'),
        ),
        migrations.AddField(
            model_name='checklistrecord',
            name='checklist_taxon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.checklisttaxon'),
        ),
        migrations.AddField(
            model_name='checklistrecord',
            name='observation_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='flora.observationtype'),
        ),
        migrations.CreateModel(
            name='TaxonSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('synonym', models.CharField(max_length=256)),
                ('taxon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flora.taxon')),
            ],
            options={
                'unique_together': {('synonym',)},
            },
        ),
        migrations.AddIndex(
            model_name='checklistrecord',
            index=models.Index(fields=['checklist', 'external_record_id'], name='flora_check_checkli_1fab4d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='checklistrecord',
            unique_together={('checklist', 'external_record_id')},
        ),
        migrations.AddIndex(
            model_name='checklistfamily',
            index=models.Index(fields=['family', 'checklist'], name='flora_check_family_a13dc0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='checklistfamily',
            unique_together={('checklist', 'family'), ('checklist', 'external_id')},
        ),
    ]
